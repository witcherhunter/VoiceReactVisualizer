{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amirh\\\\Desktop\\\\project\\\\ReactVioceVisulizer1-main\\\\ReactVioceVisulizer1-main\\\\src\\\\component\\\\AudioVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioVisualizer = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const audioContextRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const audioRef = useRef(null);\n  const analyzerRef = useRef(null);\n\n  //function thats create random  color \n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\n  useEffect(() => {\n    audioContextRef.current = new AudioContext();\n    analyzerRef.current = audioContextRef.current.createAnalyser();\n    const canvas = canvasRef.current;\n    // Set the initial dimensions of the canvas\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    return () => {\n      if (analyzerRef.current) {\n        analyzerRef.current.disconnect();\n      }\n    };\n  }, []);\n  const setupAudio = () => {\n    // قسمت پایین را تمام چت درست کرده است باید دوباره نگاه کنم بهش کدش را کامل متوجه نشدم \n    try {\n      if (audioRef.current && audioContextRef.current && analyzerRef.current) {\n        // Check if the audio source is already connected\n        if (audioRef.current.srcObject) {\n          // If it is, stop the current source and create a new one\n          audioRef.current.srcObject.getTracks().forEach(track => track.stop());\n          audioRef.current.srcObject = null;\n        }\n        const audioSource = audioContextRef.current.createMediaElementSource(audioRef.current);\n\n        // Connect the new source\n        audioSource.connect(analyzerRef.current);\n        analyzerRef.current.connect(audioContextRef.current.destination);\n        analyzerRef.current.fftSize = 16384;\n        const bufferLength = analyzerRef.current.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        // Update canvas dimensions when setting up audio\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const barWidth = canvas.width / bufferLength;\n        let x = 0;\n        function animate() {\n          //بعد از اتمام اهنگ صفحه  رفرش میشود \n          audioRef.current.onended = () => {\n            // Refresh the page when audio playback ends\n            window.location.reload();\n          };\n\n          //بعد از هر بار که این ستون ها بالا می ایند صفرشون میکنه\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          analyzerRef.current.getByteFrequencyData(dataArray);\n          visulizer(bufferLength, x, barWidth, dataArray, ctx);\n          requestAnimationFrame(animate);\n        }\n        audioContextRef.current.resume().then(() => {\n          // Animation loop\n          animate();\n        });\n      }\n    } catch (error) {\n      // Log the error if needed\n      console.error(\"Error in setupAudio:\", error);\n      // You can choose to handle the error or simply ignore it\n    }\n  };\n\n  const visulizer = (bufferLength, x, barWidth, dataArray, ctx) => {\n    for (let i = 0; i < bufferLength; i++) {\n      const barHeight = dataArray[i];\n      ctx.save();\n      // موفیت مکانی رو بهمون نشون میدهد که\n      ctx.translate(canvasRef.current.width / 2, canvasRef.current.height / 2);\n      ctx.rotate(i + Math.PI * 2 / bufferLength);\n      ctx.fillStyle = currentColor;\n      ctx.fillRect(300, 200, barWidth, barHeight);\n\n      //gapHeight is size of wihte circle in middle of visulizer\n      // gapheith رو وقتی عوص میکنیم میتونه اندازه ای رو که بار هامون بالا پایین میشن رو تغییر بده\n      const gapHeight = 10;\n      ctx.fillStyle = \"white\";\n      //barHeight - gapHeight it's create top of the bar that we have white things\n      ctx.fillRect(0, barHeight - gapHeight, barWidth, gapHeight);\n      x += barWidth;\n      ctx.restore();\n    }\n  };\n  const handleContainerClick = () => {\n    const audio1 = audioRef.current;\n    audio1.play().then(() => {\n      setupAudio();\n    }).catch(error => {\n      console.error(\"Error playing audio:\", error);\n    });\n  };\n  const handleFileChange = e => {\n    const files = e.target.files;\n    const audio1 = audioRef.current;\n\n    // Pause the current audio if playing\n    if (!audio1.paused) {\n      audio1.pause();\n    }\n\n    // Disconnect the previous source\n    if (analyzerRef.current && analyzerRef.current.mediaElement) {\n      analyzerRef.current.mediaElement.disconnect();\n    }\n\n    // Set loading state to true immediately\n    setLoading(true);\n    const audioURL = URL.createObjectURL(files[0]);\n    audio1.src = audioURL;\n    console.log(audio1.src);\n    console.log(audioRef.current.src);\n    audio1.load();\n\n    // Play the audio and then set up the visualization\n    audio1.play().then(() => {\n      // Refresh the page and reset loading state after the audio finishes playing\n      audio1.onended = () => {\n        window.location.reload();\n        setLoading(false);\n      };\n\n      // Set up audio after starting to play\n      setupAudio();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      ref: fileInputRef,\n      style: {\n        position: \"absolute\",\n        top: \"150px\",\n        color: \"white\",\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audio1\",\n      ref: audioRef,\n      style: {\n        width: \"50%\",\n        margin: \"50px auto\",\n        display: \"block\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas1\",\n      ref: canvasRef,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioVisualizer, \"LvOJSduhJ4e9/dsPOyBnrnzqS3E=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["computeHeadingLevel","React","useRef","useState","useEffect","jsxDEV","_jsxDEV","AudioVisualizer","_s","loading","setLoading","audioContextRef","canvasRef","fileInputRef","audioRef","analyzerRef","getRandomColor","letters","color","i","Math","floor","random","currentColor","setCurrentColor","current","AudioContext","createAnalyser","canvas","width","window","innerWidth","height","innerHeight","disconnect","setupAudio","srcObject","getTracks","forEach","track","stop","audioSource","createMediaElementSource","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","ctx","getContext","barWidth","x","animate","onended","location","reload","clearRect","getByteFrequencyData","visulizer","requestAnimationFrame","resume","then","error","console","barHeight","save","translate","rotate","PI","fillStyle","fillRect","gapHeight","restore","handleContainerClick","audio1","play","catch","handleFileChange","e","files","target","paused","pause","mediaElement","audioURL","URL","createObjectURL","src","log","load","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","left","backgroundColor","type","onChange","ref","zIndex","id","margin","display","_c","$RefreshReg$"],"sources":["C:/Users/amirh/Desktop/project/ReactVioceVisulizer1-main/ReactVioceVisulizer1-main/src/component/AudioVisualizer.jsx"],"sourcesContent":["import { computeHeadingLevel } from \"@testing-library/react\";\nimport React, { useRef, useState, useEffect } from \"react\";\n\nconst AudioVisualizer = () => {\n  const [loading, setLoading] = useState(false);\n  const audioContextRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const audioRef = useRef(null);\n  const analyzerRef = useRef(null);\n\n  //function thats create random  color \n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\n\n  useEffect(() => {\n    audioContextRef.current = new AudioContext();\n    analyzerRef.current = audioContextRef.current.createAnalyser();\n    const canvas = canvasRef.current;\n    // Set the initial dimensions of the canvas\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    return () => {\n      if (analyzerRef.current) {\n        analyzerRef.current.disconnect();\n      }\n    };\n  }, []);\n\n  const setupAudio = () => {\n  // قسمت پایین را تمام چت درست کرده است باید دوباره نگاه کنم بهش کدش را کامل متوجه نشدم \n    try {\n      if (audioRef.current && audioContextRef.current && analyzerRef.current) {\n        // Check if the audio source is already connected\n        if (audioRef.current.srcObject) {\n          // If it is, stop the current source and create a new one\n          audioRef.current.srcObject.getTracks().forEach((track) => track.stop());\n          audioRef.current.srcObject = null;\n        }\n  \n        const audioSource = audioContextRef.current.createMediaElementSource(\n          audioRef.current\n        );\n  \n        // Connect the new source\n        audioSource.connect(analyzerRef.current);\n        analyzerRef.current.connect(audioContextRef.current.destination);\n        analyzerRef.current.fftSize = 16384;\n  \n        const bufferLength = analyzerRef.current.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n  \n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        // Update canvas dimensions when setting up audio\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const barWidth = canvas.width / bufferLength;\n  \n        let x = 0;\n\n      function animate() {\n        //بعد از اتمام اهنگ صفحه  رفرش میشود \n        audioRef.current.onended = () => {\n          // Refresh the page when audio playback ends\n          window.location.reload();\n        };\n\n        //بعد از هر بار که این ستون ها بالا می ایند صفرشون میکنه\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        analyzerRef.current.getByteFrequencyData(dataArray);\n        visulizer(bufferLength, x, barWidth, dataArray, ctx);\n        requestAnimationFrame(animate);\n      }\n\n      audioContextRef.current.resume().then(() => {\n        // Animation loop\n        animate();\n      });\n    }\n  } catch (error) {\n    // Log the error if needed\n    console.error(\"Error in setupAudio:\", error);\n    // You can choose to handle the error or simply ignore it\n  }\n};\n\n  const visulizer = (bufferLength, x, barWidth, dataArray, ctx) => {\n    for (let i = 0; i < bufferLength; i++) {\n      const barHeight = dataArray[i];\n      ctx.save();\n      // موفیت مکانی رو بهمون نشون میدهد که\n      ctx.translate(canvasRef.current.width / 2, canvasRef.current.height / 2);\n      ctx.rotate(i + (Math.PI * 2) / bufferLength);\n\n      ctx.fillStyle = currentColor;\n      ctx.fillRect(300, 200, barWidth, barHeight);\n\n      //gapHeight is size of wihte circle in middle of visulizer\n      // gapheith رو وقتی عوص میکنیم میتونه اندازه ای رو که بار هامون بالا پایین میشن رو تغییر بده\n      const gapHeight = 10;\n      ctx.fillStyle = \"white\";\n      //barHeight - gapHeight it's create top of the bar that we have white things\n      ctx.fillRect(0, barHeight - gapHeight, barWidth, gapHeight);\n      x += barWidth;\n      ctx.restore();\n    }\n  };\n\n  const handleContainerClick = () => {\n    const audio1 = audioRef.current;\n    audio1\n      .play()\n      .then(() => {\n        setupAudio();\n      })\n      .catch((error) => {\n        console.error(\"Error playing audio:\", error);\n      });\n  };\n\n\n    \n    const handleFileChange = (e) => {\n      const files = e.target.files;\n      const audio1 = audioRef.current;\n  \n      // Pause the current audio if playing\n      if (!audio1.paused) {\n        audio1.pause();\n      }\n  \n      // Disconnect the previous source\n      if (analyzerRef.current && analyzerRef.current.mediaElement) {\n        analyzerRef.current.mediaElement.disconnect();\n      }\n  \n      // Set loading state to true immediately\n      setLoading(true);\n  \n      const audioURL = URL.createObjectURL(files[0]);\n      audio1.src = audioURL;\n      console.log(audio1.src);\n      console.log(audioRef.current.src);\n      audio1.load();\n  \n      // Play the audio and then set up the visualization\n      audio1.play().then(() => {\n        // Refresh the page and reset loading state after the audio finishes playing\n        audio1.onended = () => {\n          window.location.reload();\n          setLoading(false);\n        };\n  \n        // Set up audio after starting to play\n        setupAudio();\n      });\n  \n    \n  };\n\n  return (\n    <div>\n      {loading && <div>Loading...</div>}\n\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"black\",\n        }}\n      >\n        {/* Your container content */}\n      </div>\n      <input\n        type=\"file\"\n        onChange={handleFileChange}\n        ref={fileInputRef}\n        style={{\n          position: \"absolute\",\n          top: \"150px\",\n          color: \"white\",\n          zIndex: 1,\n        }}\n      />\n      <audio\n        id=\"audio1\"\n        ref={audioRef}\n        style={{\n          width: \"50%\",\n          margin: \"50px auto\",\n          display: \"block\",\n        }}\n      ></audio>\n      <canvas\n        id=\"canvas1\"\n        ref={canvasRef}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default AudioVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}